{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Contributing",
  "steps": [
    {
      "file": "contributing.md",
      "description": "## Welcome! ðŸ‘‹\r\n\r\nThanks for your interest on contributing to the d365fo.tools PowerShell module.\r\n\r\nThis code tour will walk you through the main parts of the repository. I will show you the places where you can start the various ways of contributing.\r\n\r\nAlong the way, some guidance will be given on each type of contribution. At some point, you may want to give the contributing guidelines shown here a read through.",
      "line": 2,
      "title": "Welcome!",
      "icon": "ðŸ‘‹"
    },
    {
      "directory": "d365fo.tools",
      "description": "The d365fo.tools folder in the repository contains the source code of the module.\r\n\r\nSince this is the main focus of many contributions, the tour will guide you through the sub folders.\r\n\r\nOne thing you will notice once you get deeper into the module's implementation: In many places, functionality from the [PSFramework](https://psframework.org/documentation/documents/psframework.html) is used. While familiarity with the framework is not required for contributing to d365fo.tools, at some point, you may want read the linked documentation page to get a rough idea what the framework does."
    },
    {
      "directory": "d365fo.tools/functions",
      "description": "The functions sub-folder contains the main content of the repository: The commands that make up the d365fo.tools module.\r\n\r\nEach command has its own file, where you can find the logic of the command.\r\n\r\nFor example, the [get-d365module.ps1](./d365fo.tools/functions/get-d365module.ps1) file contains the logic for the `Get-D365Module` command that lets you retrieve information about the available Dynamics 365 Finance and Operations modules.",
      "title": "|- functions"
    },
    {
      "directory": "d365fo.tools/internal",
      "description": "The internal sub-folder contains different kinds of files that are used internally by d365fo.tools. As a user, you usually do not have direct contact with these files. However, as a contributor, depending on the type of contribution, you may also make changes in this folder.\r\n\r\nFor example, the [variables.ps1](./d365fo.tools/internal/scripts/variables.ps1) file is executed every time the module is loaded in a session. It sets a number of variables. Many of them are used as default values for parameters of various commands. This makes it easier for users to use these commands, since they do not have to bother with these default values.",
      "title": "|- internal"
    },
    {
      "directory": "d365fo.tools/en-us",
      "description": "The en-us sub-folder contains the English translations of the conceptual [about](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/get-help#example-8-display-a-list-of-conceptual-articles) help content for d365fo.tools. At the time of writing (March 2025), the content here is limited. If you are interested in contributing help/documentation content for the module, this is one place to start.",
      "title": "|- en-us"
    },
    {
      "file": "d365fo.tools/tests/readme.md",
      "description": "The tests sub-folder contains the automated tests for the module.\r\n\r\nMost tests are auto-generated by the [PSModuleDevelopment](https://psframework.org/documentation/documents/psmoduledevelopment.html) PowerShell module.\r\n\r\nThe [readme.md](./d365fo.tools/tests/readme.md) file has more information about the tests.",
      "line": 1,
      "title": "|- tests"
    },
    {
      "directory": "d365fo.tools",
      "description": "Other sub-folders include:\r\n\r\n- [d365fo.tools/bin](./d365fo.tools/bin/readme.md): Currently (March 2025) contains only the command index file.\r\n- [d365fo.tools/xml](./d365fo.tools/xml/readme.md): Contains format and type extension files for the module.\r\n\r\nUsually, you do not need to make changes in these folders.",
      "title": "|- bin and xml"
    },
    {
      "file": "d365fo.tools/d365fo.tools.psd1",
      "description": "The [d365fo.tools.psd1](./d365fo.tools/d365fo.tools.psd1) file contains the module definition. The highlighted `FunctionsToExport` property contains a list of all the commands that the module makes available to the user. If you contribute a new command, make sure to add it to this list. Otherwise, users will not be able to run it.",
      "line": 48
    },
    {
      "directory": "docs",
      "description": "If you want to contribute documentation or help content, you might think about content for individual commands. The help for these is based on the [comment based help](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comment_based_help) concept. To change the help content for a command, you would modify the documentation of the command in the [functions][#3] folder.\r\n\r\nFrom this documentation, markdown files are automatically generated that you can find in this folder. Do not change the content of the markdown files directly. These changes will be overwritten next time the markdown files are generated.\r\n\r\nThe content of this folder is automatically synchronized with the wiki."
    },
    {
      "directory": "wiki",
      "description": "The wiki folder contains the content of the pages in the [d365fo.tools wiki](https://github.com/d365collaborative/d365fo.tools/wiki).\r\n\r\nThis is the place for tutorials, how-to instructions, conceptual explanations and other help content. \r\n\r\nThe content of this folder is automatically synchronized with the wiki."
    },
    {
      "directory": "build",
      "description": "The scripts and files in the build folder are used to validate, build and publish the d365fo.tools module. To learn more about the content of this folder, take look at [Building tools](https://github.com/d365collaborative/d365fo.tools/wiki/Building-tools)"
    },
    {
      "directory": ".github/workflows",
      "description": "The .github/workflows folder contains the GitHub workflows for the repository. \r\n\r\n[build-manual.yml](./.github/workflows/build-manual.yml) and [build.yml](./.github/workflows/build.yml) are for validating, building and publishing the module (see also [build][#11]). build.yml is executed automatically when a pull request is created to validate the changes of the pr.\r\n\r\n[dependencies.yml](./.github/workflows/dependencies.yml) lists the PowerShell modules that d365fo.tools depends on. While these dependencies are already declared in the module definition file, they are also declared here. The reason is that GitHub can interpret and list these dependencies.\r\n\r\n[update-generated-text.yml](./.github/workflows/update-generated-text.yml) is executing the [build][#11] scripts that auto-generate the tests and markdown files for the commands. It also updates the [commands index file](./d365fo.tools/bin/d365fo.tools-index.json). If that results in any changes, a pull request is created with the changes, targeting the branch that the workflow was run from.\r\nThis is useful when, after changing or creating a new command, you want to update the tests, markdown files and the command index.\r\n\r\n[update-wiki.yml](./.github/workflows/update-wiki.yml) synchronizes the content of the [docs][#9] and [wiki][#10] folder with the wiki. It is automatically executed when changes in these two folders are pushed to the default branch."
    },
    {
      "directory": "",
      "description": "This concludes the tour of the repository. Hopefully, you got an idea how it is organized and where you can start contributing. If you have questions, please create an issue or discussion or contact another maintainer directly. We are happy to help!",
      "title": "End"
    }
  ]
}