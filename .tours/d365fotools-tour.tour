{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Intro",
  "steps": [
    {
      "title": "Welcome!",
      "description": "Welcome to the d365fo.tools!\r\nThis tour aims to give you a brief overview of the capabilities of the d365fo.tools. It also shows you where you can find the commands and documentation on each command."
    },
    {
      "title": "Get Started",
      "description": "The [README](https://github.com/d365collaborative/d365fo.tools/blob/HEAD/./README.md) contains a good guide to get started with the d365fo.tools. \r\n\r\nIn addition, since there are a lot of commands for a variety of different topics, you may want to familiarize yourself with the ```Find-D365Command``` command, which can be very helpful to find commands related to a certain topic. For example, if you wanted to know what commands are available to work with Lifecylce Services (LCS), you could enter the command\r\n\r\n``` ps\r\nFind-D365Command LCS\r\n```\r\n\r\nThis would give you the following (still rather long) list of results.\r\n```\r\nCommandName                            Synopsis\r\n-----------                            --------\r\nBackup-D365WebConfig                   Backup the web.config file\r\nGet-D365AzureDevOpsNuget               Get Azure DevOps nugets\r\nGet-D365AzureStorageUrl                Get a blob Url from Azure Storage account\r\nGet-D365BacpacTable                    Get tables from the bacpac file\r\nGet-D365ExternalIP                     Get the external IP address\r\nGet-D365LcsApiConfig                   Get the LCS configuration details\r\nGet-D365LcsApiToken                    Get a valid OAuth 2.0 access token for LCS\r\nGet-D365LcsAssetFile                   Get file from the Asset library inside the LCS project\r\nGet-D365LcsAssetValidationStatus       Get the validation status from LCS\r\nGet-D365LcsDatabaseBackups             Get database backups from LCS project\r\nGet-D365LcsDatabaseOperationStatus     Get the status of a database operation from LCS\r\nGet-D365LcsDeploymentStatus            Get the Deployment status from LCS\r\nGet-D365LcsEnvironmentHistory          Get history for a given environment within a LCS project\r\nGet-D365LcsEnvironmentMetadata         Get LCS environment meta data from within a project\r\nImport-D365Bacpac                      Import a bacpac file\r\nImport-D365RsatSelfServiceCertificates Import certificates for RSAT\r\nInvoke-D365AzCopyTransfer              Transfer a file using AzCopy\r\nInvoke-D365LcsApiRefreshToken          Refresh the token for lcs communication\r\nInvoke-D365LcsDatabaseExport           Start a database export from an environment\r\nInvoke-D365LcsDatabaseRefresh          Start a database refresh between 2 environments\r\nInvoke-D365LcsDeployment               Start the deployment of a deployable package\r\nInvoke-D365LcsEnvironmentStart         Start a specified environment through LCS.\r\nInvoke-D365LcsEnvironmentStop          Stop a specified environment through LCS.\r\nInvoke-D365LcsUpload                   Upload a file to a LCS project\r\nInvoke-D365WinRmCertificateRotation    Rotate the certificate used for WinRM\r\nRestore-D365WebConfig                  Restore the web.config file\r\nSend-D365BroadcastMessage              Send broadcast message to online users in D365FO\r\nSet-D365LcsApiConfig                   Set the LCS configuration details\r\nSet-D365WebConfigDatabase              Set the database connection details\r\n```\r\n\r\nTo narrow if further down, you can also use ```Find-D365Command``` to do a tag search:\r\n\r\n``` ps\r\nFind-D365Command -Tag LCS\r\n```\r\n\r\nWith the following results:\r\n\r\n```\r\nCommandName                        Synopsis\r\n-----------                        --------\r\nBackup-D365WebConfig               Backup the web.config file\r\nGet-D365AzureStorageUrl            Get a blob Url from Azure Storage account\r\nGet-D365ExternalIP                 Get the external IP address\r\nGet-D365LcsApiConfig               Get the LCS configuration details\r\nGet-D365LcsApiToken                Get a valid OAuth 2.0 access token for LCS\r\nGet-D365LcsDatabaseOperationStatus Get the status of a database operation from LCS\r\nGet-D365LcsDeploymentStatus        Get the Deployment status from LCS\r\nInvoke-D365AzCopyTransfer          Transfer a file using AzCopy\r\nInvoke-D365LcsApiRefreshToken      Refresh the token for lcs communication\r\nInvoke-D365LcsDatabaseExport       Start a database export from an environment\r\nInvoke-D365LcsDatabaseRefresh      Start a database refresh between 2 environments\r\nInvoke-D365LcsDeployment           Start the deployment of a deployable package\r\nInvoke-D365LcsEnvironmentStart     Start a specified environment through LCS.\r\nInvoke-D365LcsEnvironmentStop      Stop a specified environment through LCS.\r\nInvoke-D365LcsUpload               Upload a file to a LCS project\r\nRestore-D365WebConfig              Restore the web.config file\r\nSet-D365LcsApiConfig               Set the LCS configuration details\r\nSet-D365WebConfigDatabase          Set the database connection details\r\n```"
    },
    {
      "directory": "d365fo.tools/functions",
      "description": "The functions folder contains all the d365fo.tools commands available after installing the module. If you want to learn more about the categories of commands available, take a look at the other tours available.\r\n\r\nSince there are a lot of commands, keep the following general tips in mind:\r\n1. The first part of each command before the - symbol is one of the [approved verbs for PowerShell commands](https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands). For commands where no better approved verb exists, the ```Invoke``` verb is used instead. \r\n    - Some commands (but not all) appear in the following pairs (in declining order of consistency):\r\n        - ```Enable``` and ```Disable```\r\n        - ```Get``` and ```Set```\r\n        - ```Add``` and ```Remove```\r\n1. After the - symbol, the text ```D365``` appears. This is to distinguish the commands from commands of other PowerShell modules.\r\n1. The rest of the command identifies the D365 specific area that the command applies to.",
      "title": "Commands"
    },
    {
      "directory": "docs",
      "description": "The docs folder contains the documentation of the d365fo.tools commands. You can also access this information in PowerShell after the d365fo.tools have been installed.",
      "title": "Documentation"
    }
  ],
  "isPrimary": true
}